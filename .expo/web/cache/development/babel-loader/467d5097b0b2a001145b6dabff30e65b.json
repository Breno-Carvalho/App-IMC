{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\simei\\\\Documents\\\\App-IMC\\\\src\\\\login.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { css } from \"../assets/css/css\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState('none'),\n      _useState2 = _slicedToArray(_useState, 2),\n      display = _useState2[0],\n      setDisplay = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      login = _useState8[0],\n      setLogin = _useState8[1];\n\n  var _useState9 = useState(new Animated.ValueXY({\n    x: 0,\n    y: 95\n  })),\n      _useState10 = _slicedToArray(_useState9, 1),\n      offset = _useState10[0];\n\n  var _useState11 = useState(new Animated.Value(0)),\n      _useState12 = _slicedToArray(_useState11, 1),\n      opacity = _useState12[0];\n\n  var _useState13 = useState(new Animated.ValueXY({\n    x: 200,\n    y: 200\n  })),\n      _useState14 = _slicedToArray(_useState13, 1),\n      logo = _useState14[0];\n\n  useEffect(function () {\n    KeyboardDidShowListener = Keyboard.addListener('keyboardDidShow', keyboardDidShow);\n    KeyboardDidHideListener = Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n    Animated.parallel([Animated.spring(offset.y, {\n      toValue: 0,\n      speed: 4,\n      bounciness: 20\n    }), Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200\n    })]).start();\n\n    function keyboardDidShow() {\n      Animated.parallel([Animated.timing(logo.x, {\n        toValue: 55,\n        duration: 500\n      }), Animated.timing(logo.y, {\n        toValue: 65,\n        duration: 500\n      })]).start();\n    }\n\n    function keyboardDidHide() {\n      Animated.parallel([Animated.timing(logo.x, {\n        toValue: 200,\n        duration: 500\n      }), Animated.timing(logo.y, {\n        toValue: 200,\n        duration: 500\n      })]).start();\n    }\n  }, []);\n\n  function sendForm() {\n    var response, json;\n    return _regeneratorRuntime.async(function sendForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://192.168.15.3:3000/login', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                name: user,\n                password: password\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n\n            if (!(json === 'error')) {\n              _context.next = 13;\n              break;\n            }\n\n            setDisplay('flex');\n            setTimeout(function () {\n              setDisplay('none');\n            }, 5000);\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(AsyncStorage.clear());\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('userData', JSON.stringify(json)));\n\n          case 15:\n            navigation.navigate('App');\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: css.tela_login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: css.containerLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, React.createElement(Animated.Image, {\n    style: {\n      width: logo.x,\n      height: logo.y\n    },\n    source: require(\"../assets/img/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  })), React.createElement(Animated.View, {\n    style: [css.form_login, {\n      opacity: opacity,\n      transform: [{\n        translateY: offset.y\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: css.msg_login(display),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Usu\\xE1rio ou senha inv\\xE1lidos!\"), React.createElement(TextInput, {\n    style: css.input_login,\n    placeholder: \"Username\",\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setUser(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: css.input_login,\n    placeholder: \"Senha\",\n    secureTextEntry: true,\n    autoCorrect: false,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: css.btnSubmit_login,\n    onPress: function onPress() {\n      return sendForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: css.submitText_login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Entrar\")), React.createElement(TouchableOpacity, {\n    style: css.btnRegister_login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Criar conta gratuita\"))));\n}","map":{"version":3,"sources":["C:/Users/simei/Documents/App-IMC/src/login.js"],"names":["React","useState","useEffect","css","AsyncStorage","Login","navigation","display","setDisplay","user","setUser","password","setPassword","login","setLogin","Animated","ValueXY","x","y","offset","Value","opacity","logo","KeyboardDidShowListener","Keyboard","addListener","keyboardDidShow","KeyboardDidHideListener","keyboardDidHide","parallel","spring","toValue","speed","bounciness","timing","duration","start","sendForm","fetch","method","headers","Accept","body","JSON","stringify","name","response","json","setTimeout","clear","setItem","navigate","tela_login","containerLogo","width","height","require","form_login","transform","translateY","msg_login","input_login","text","btnSubmit_login","submitText_login","btnRegister_login"],"mappings":"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","sourcesContent":["import React, {useState,useEffect} from 'react';\r\n\r\nimport { View,\r\n        KeyboardAvoidingView, \r\n        Image, \r\n        TextInput, \r\n        TouchableOpacity, \r\n        Text,\r\n        Animated,\r\n        Keyboard\r\n      } from 'react-native';\r\n\r\nimport {css} from '../assets/css/css';\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function Login({navigation}) {\r\n\r\n    const [display, setDisplay]=useState('none');\r\n    const [user, setUser]=useState(null);\r\n    const [password, setPassword]=useState(null);\r\n    const [login, setLogin]=useState(null);\r\n\r\n    //Efeito animado do Login\r\n    const [offset] = useState(new Animated.ValueXY({x: 0, y: 95}));\r\n    const [opacity] = useState(new Animated.Value(0));\r\n    const [logo] = useState(new Animated.ValueXY({x: 200, y:200}));\r\n\r\n    useEffect(()=> {\r\n        KeyboardDidShowListener = Keyboard.addListener('keyboardDidShow', keyboardDidShow);\r\n        KeyboardDidHideListener = Keyboard.addListener('keyboardDidHide', keyboardDidHide);\r\n\r\n        Animated.parallel([\r\n            Animated.spring(offset.y, {\r\n                toValue: 0,\r\n                speed: 4,\r\n                bounciness: 20    \r\n            }),\r\n            Animated.timing(opacity, {\r\n                toValue: 1,\r\n                duration: 200,\r\n            })\r\n        ]).start();\r\n\r\n        function keyboardDidShow(){\r\n            Animated.parallel([\r\n                Animated.timing(logo.x, {\r\n                    toValue: 55,\r\n                    duration: 500,\r\n                }),\r\n                Animated.timing(logo.y, {\r\n                    toValue: 65,\r\n                    duration: 500,\r\n                }),\r\n            ]).start();\r\n        }\r\n\r\n        function keyboardDidHide() {\r\n            Animated.parallel([\r\n                Animated.timing(logo.x, {\r\n                    toValue: 200,\r\n                    duration: 500,\r\n                }),\r\n                Animated.timing(logo.y, {\r\n                    toValue: 200,\r\n                    duration: 500,\r\n                }),\r\n            ]).start();\r\n        }\r\n    }, []);\r\n\r\n    //Envio de formulário\r\n    async function sendForm()\r\n    {\r\n        let response = await fetch('http://192.168.15.3:3000/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              Accept: 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: user,\r\n                password: password\r\n            })\r\n        });\r\n        let json = await response.json();\r\n        if(json === 'error'){\r\n            setDisplay('flex');\r\n            setTimeout(() => {\r\n                setDisplay('none');\r\n            },5000);\r\n            await AsyncStorage.clear();\r\n        }else { \r\n            await AsyncStorage.setItem('userData', JSON.stringify(json));\r\n            navigation.navigate('App');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView style={css.tela_login}>\r\n            <View style={css.containerLogo}>\r\n                <Animated.Image \r\n                style={{\r\n                   width: logo.x,\r\n                   height: logo.y, \r\n                }}\r\n                source={require('../assets/img/logo.png')}/>\r\n            </View>\r\n\r\n          \r\n\r\n            <Animated.View style={[\r\n                    css.form_login,\r\n                    {\r\n                        opacity: opacity,\r\n                        transform: [\r\n                            { translateY: offset.y}\r\n                        ]\r\n                    }\r\n                ]}>\r\n\r\n                <Text style={css.msg_login(display)}>Usuário ou senha inválidos!</Text>\r\n\r\n                <TextInput \r\n                style={css.input_login}\r\n                placeholder=\"Username\"\r\n                autoCorrect={false}\r\n                onChangeText={text=>setUser(text)}\r\n                />\r\n\r\n                <TextInput\r\n                style={css.input_login}\r\n                placeholder=\"Senha\"\r\n                secureTextEntry={true}\r\n                autoCorrect={false}\r\n                onChangeText={text=>setPassword(text)}\r\n                />\r\n\r\n                <TouchableOpacity \r\n                    style={css.btnSubmit_login}\r\n                    onPress={() => sendForm()}>\r\n                    <Text style={css.submitText_login}>Entrar</Text>\r\n                </TouchableOpacity>\r\n\r\n                <TouchableOpacity style={css.btnRegister_login}>\r\n                    <Text>Criar conta gratuita</Text>\r\n                </TouchableOpacity>\r\n            </Animated.View>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}