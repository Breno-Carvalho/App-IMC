{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\simei\\\\Documents\\\\Pasta nova\\\\App-IMC\\\\src\\\\login.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport firebase from \"../firebaseConfig\";\nimport { css } from \"../assets/css/css\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      senha = _useState4[0],\n      setSenha = _useState4[1];\n\n  var _useState5 = useState('none'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      display = _useState6[0],\n      setDisplay = _useState6[1];\n\n  function logar() {\n    firebase.auth().signInWithEmailAndPassword(email, senha).then(function () {\n      navigation.navigate('App');\n    }).catch(function (error) {\n      setDisplay('flex');\n      setTimeout(function () {\n        setDisplay('none');\n      }, 5000);\n    });\n  }\n\n  var _useState7 = useState(new Animated.ValueXY({\n    x: 0,\n    y: 95\n  })),\n      _useState8 = _slicedToArray(_useState7, 1),\n      offset = _useState8[0];\n\n  var _useState9 = useState(new Animated.Value(0)),\n      _useState10 = _slicedToArray(_useState9, 1),\n      opacity = _useState10[0];\n\n  var _useState11 = useState(new Animated.ValueXY({\n    x: 200,\n    y: 200\n  })),\n      _useState12 = _slicedToArray(_useState11, 1),\n      logo = _useState12[0];\n\n  useEffect(function () {\n    KeyboardDidShowListener = Keyboard.addListener('keyboardDidShow', keyboardDidShow);\n    KeyboardDidHideListener = Keyboard.addListener('keyboardDidHide', keyboardDidHide);\n    Animated.parallel([Animated.spring(offset.y, {\n      toValue: 0,\n      speed: 4,\n      bounciness: 20\n    }), Animated.timing(opacity, {\n      toValue: 1,\n      duration: 200\n    })]).start();\n\n    function keyboardDidShow() {\n      Animated.parallel([Animated.timing(logo.x, {\n        toValue: 55,\n        duration: 500\n      }), Animated.timing(logo.y, {\n        toValue: 65,\n        duration: 500\n      })]).start();\n    }\n\n    function keyboardDidHide() {\n      Animated.parallel([Animated.timing(logo.x, {\n        toValue: 200,\n        duration: 500\n      }), Animated.timing(logo.y, {\n        toValue: 200,\n        duration: 500\n      })]).start();\n    }\n  }, []);\n  return React.createElement(KeyboardAvoidingView, {\n    style: css.tela_login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: css.containerLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(Animated.Image, {\n    style: {\n      width: logo.x,\n      height: logo.y\n    },\n    source: require(\"../assets/img/logo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), React.createElement(Animated.View, {\n    style: [css.form_login, {\n      opacity: opacity,\n      transform: [{\n        translateY: offset.y\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: css.msg_login(display),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Usu\\xE1rio ou senha inv\\xE1lidos!\"), React.createElement(TextInput, {\n    style: css.input_login,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    value: email,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: css.input_login,\n    placeholder: \"Senha\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(senha) {\n      return setSenha(senha);\n    },\n    value: senha,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: css.btnSubmit_login,\n    onPress: function onPress() {\n      return logar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: css.submitText_login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, \"Entrar\"))));\n}","map":{"version":3,"sources":["C:/Users/simei/Documents/Pasta nova/App-IMC/src/login.js"],"names":["React","useState","useEffect","firebase","css","Login","navigation","email","setEmail","senha","setSenha","display","setDisplay","logar","auth","signInWithEmailAndPassword","then","navigate","catch","error","setTimeout","Animated","ValueXY","x","y","offset","Value","opacity","logo","KeyboardDidShowListener","Keyboard","addListener","keyboardDidShow","KeyboardDidHideListener","keyboardDidHide","parallel","spring","toValue","speed","bounciness","timing","duration","start","tela_login","containerLogo","width","height","require","form_login","transform","translateY","msg_login","input_login","btnSubmit_login","submitText_login"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nimport { View,\r\n    KeyboardAvoidingView, \r\n    Image, \r\n    TextInput, \r\n    TouchableOpacity, \r\n    Text,\r\n    Animated,\r\n    Keyboard\r\n  } from 'react-native';\r\n\r\nimport firebase from '../firebaseConfig'; \r\n\r\nimport {css} from '../assets/css/css';\r\n\r\nexport default function Login({navigation}) {\r\n\r\n    // Autenticação de Login\r\n    const [email, setEmail] = useState('');\r\n    const [senha, setSenha] = useState('');\r\n    const [display, setDisplay]=useState('none');\r\n\r\n    function logar() {\r\n        firebase.auth().signInWithEmailAndPassword(email, senha).then(()=>{\r\n            navigation.navigate('App');\r\n        }).catch((error)=> {\r\n\r\n            setDisplay('flex');\r\n            setTimeout(() => {\r\n                setDisplay('none');\r\n            },5000);\r\n        });\r\n    }\r\n\r\n    //Efeito animado do Login\r\n    const [offset] = useState(new Animated.ValueXY({x: 0, y: 95}));\r\n    const [opacity] = useState(new Animated.Value(0));\r\n    const [logo] = useState(new Animated.ValueXY({x: 200, y:200}));\r\n\r\n    useEffect(()=> {\r\n        KeyboardDidShowListener = Keyboard.addListener('keyboardDidShow', keyboardDidShow);\r\n        KeyboardDidHideListener = Keyboard.addListener('keyboardDidHide', keyboardDidHide);\r\n\r\n        Animated.parallel([\r\n            Animated.spring(offset.y, {\r\n                toValue: 0,\r\n                speed: 4,\r\n                bounciness: 20    \r\n            }),\r\n            Animated.timing(opacity, {\r\n                toValue: 1,\r\n                duration: 200,\r\n            })\r\n        ]).start();\r\n\r\n        function keyboardDidShow(){\r\n            Animated.parallel([\r\n                Animated.timing(logo.x, {\r\n                    toValue: 55,\r\n                    duration: 500,\r\n                }),\r\n                Animated.timing(logo.y, {\r\n                    toValue: 65,\r\n                    duration: 500,\r\n                }),\r\n            ]).start();\r\n        }\r\n\r\n        function keyboardDidHide() {\r\n            Animated.parallel([\r\n                Animated.timing(logo.x, {\r\n                    toValue: 200,\r\n                    duration: 500,\r\n                }),\r\n                Animated.timing(logo.y, {\r\n                    toValue: 200,\r\n                    duration: 500,\r\n                }),\r\n            ]).start();\r\n        }\r\n    }, []);    \r\n\r\n    return (\r\n        <KeyboardAvoidingView style={css.tela_login}>\r\n            <View style={css.containerLogo}>\r\n                <Animated.Image \r\n                    style={{\r\n                        width: logo.x,\r\n                        height: logo.y, \r\n                    }}\r\n                    source={require('../assets/img/logo.png')}/>\r\n            </View>\r\n\r\n            <Animated.View style={[\r\n                css.form_login,\r\n                {\r\n                    opacity: opacity,\r\n                    transform: [\r\n                        { translateY: offset.y}\r\n                    ]\r\n                }\r\n            ]}>\r\n            \r\n            <Text style={css.msg_login(display)}>Usuário ou senha inválidos!</Text>\r\n            \r\n            <TextInput \r\n            style={css.input_login}\r\n            placeholder=\"Email\"\r\n            onChangeText={email => setEmail(email)}\r\n            value={email}\r\n            autoCorrect={false}\r\n            />\r\n\r\n            <TextInput\r\n            style={css.input_login}\r\n            placeholder=\"Senha\"\r\n            secureTextEntry={true}\r\n            onChangeText={senha => setSenha(senha)}\r\n            value={senha}\r\n            autoCorrect={false}\r\n            />\r\n\r\n            <TouchableOpacity \r\n                style={css.btnSubmit_login}\r\n                onPress={() => logar()}>\r\n                <Text style={css.submitText_login}>Entrar</Text>\r\n            </TouchableOpacity>\r\n\r\n            </Animated.View>\r\n        </KeyboardAvoidingView>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}